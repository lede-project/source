From 8a52e4100d7c3a4a1dfddfa02b8864a9b0068c13 Mon Sep 17 00:00:00 2001
From: Daniel Golle <daniel@makrotopia.org>
Date: Sat, 17 May 2014 03:36:18 +0200
Subject: [PATCH 1/5] ubi: auto-attach mtd device named "ubi" or "data" on boot
To: openwrt-devel@lists.openwrt.org

Signed-off-by: Daniel Golle <daniel@makrotopia.org>
---
 drivers/mtd/ubi/build.c | 36 ++++++++++++++++++++++++++++++++++++
 1 file changed, 36 insertions(+)

--- a/drivers/mtd/ubi/build.c
+++ b/drivers/mtd/ubi/build.c
@@ -1203,6 +1203,49 @@ static struct mtd_info * __init open_mtd
 	return mtd;
 }
 
+/*
+ * This function tries attaching mtd partitions named either "ubi" or "data"
+ * during boot.
+ */
+static void __init ubi_auto_attach(void)
+{
+	int err;
+	struct mtd_info *mtd;
+
+	/* try attaching mtd device named "ubi" or "data" */
+	mtd = open_mtd_device("ubi");
+	if (IS_ERR(mtd))
+		mtd = open_mtd_device("data");
+
+	if (!IS_ERR(mtd)) {
+		size_t len;
+		char magic[4];
+
+		/* check for a valid ubi magic */
+		err = mtd_read(mtd, 0, 4, &len, (void *) magic);
+		if (!err && len == 4 && strncmp(magic, "UBI#", 4)) {
+			pr_err("UBI error: no valid UBI magic found inside mtd%d\n", mtd->index);
+			put_mtd_device(mtd);
+			return;
+		}
+
+		/* auto-add only media types where UBI makes sense */
+		if (mtd->type == MTD_NANDFLASH ||
+		    mtd->type == MTD_NORFLASH ||
+		    mtd->type == MTD_DATAFLASH ||
+		    mtd->type == MTD_MLCNANDFLASH) {
+			mutex_lock(&ubi_devices_mutex);
+			pr_notice("UBI: auto-attach mtd%d\n", mtd->index);
+			err = ubi_attach_mtd_dev(mtd, UBI_DEV_NUM_AUTO, 0, 0);
+			mutex_unlock(&ubi_devices_mutex);
+			if (err < 0) {
+				pr_err("UBI error: cannot attach mtd%d\n", mtd->index);
+				put_mtd_device(mtd);
+			}
+		}
+	}
+}
+
 static int __init ubi_init(void)
 {
 	int err, i, k;
@@ -1286,6 +1329,12 @@ static int __init ubi_init(void)
 		}
 	}
 
+	/* auto-attach mtd devices only if built-in to the kernel and no ubi.mtd
+	 * parameter was given */
+	if (config_enabled(CONFIG_MTD_ROOTFS_ROOT_DEV) &&
+	    !ubi_is_module() && !mtd_devs)
+		ubi_auto_attach();
+
 	err = ubiblock_init();
 	if (err) {
 		pr_err("UBI error: block: cannot initialize, error %d", err);
