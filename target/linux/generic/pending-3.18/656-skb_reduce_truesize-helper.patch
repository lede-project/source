From 4593a806e31119c5bd3faa00c7210ad862d515af Mon Sep 17 00:00:00 2001
From: Dave Taht <dave.taht@bufferbloat.net>
Date: Mon, 31 Dec 2012 10:02:21 -0800
Subject: [PATCH 3/7] skb_reduce_truesize: helper function for shrinking skbs
 whenever needed

On embedded devices in particular, large queues of small packets from the rx
path with a large truesize can exist. Reducing their size can reduce
memory pressure. skb_reduce_truesize is a helper function for doing this,
when needed.
---
 include/linux/skbuff.h |   18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

--- a/include/linux/skbuff.h
+++ b/include/linux/skbuff.h
@@ -2069,6 +2069,24 @@ static inline void pskb_trim_unique(stru
 	BUG_ON(err);
 }
 
+/*
+ * Caller wants to reduce memory needs before queueing skb
+ * The (expensive) copy should not be be done in fast path.
+ */
+static inline struct sk_buff *skb_reduce_truesize(struct sk_buff *skb)
+{
+	if (skb->truesize > 2 * SKB_TRUESIZE(skb->len)) {
+		struct sk_buff *nskb;
+		nskb = skb_copy_expand(skb, skb_headroom(skb), 0,
+			GFP_ATOMIC | __GFP_NOWARN);
+		if (nskb) {
+			__kfree_skb(skb);
+			skb = nskb;
+		}
+	}
+	return skb;
+}
+
 /**
  *	skb_orphan - orphan a buffer
  *	@skb: buffer to orphan
