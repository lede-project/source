From d27ec8bb97db0f60d81ab255d51ac4e967362067 Mon Sep 17 00:00:00 2001
From: John Crispin <blogic@openwrt.org>
Date: Thu, 7 Aug 2014 18:34:19 +0200
Subject: [PATCH 07/36] MIPS: lantiq: add basic tffs driver

Signed-off-by: John Crispin <blogic@openwrt.org>
---
 arch/mips/lantiq/xway/Makefile |    2 +-
 arch/mips/lantiq/xway/tffs.c   |   87 ++++++++++++++++++++++++++++++++++++++++
 2 files changed, 88 insertions(+), 1 deletion(-)
 create mode 100644 arch/mips/lantiq/xway/tffs.c

--- a/arch/mips/lantiq/xway/Makefile
+++ b/arch/mips/lantiq/xway/Makefile
@@ -1,5 +1,5 @@
 obj-y := prom.o sysctrl.o clk.o reset.o dma.o gptu.o dcdc.o
 
-obj-y += vmmc.o
+obj-y += vmmc.o tffs.o
 
 obj-$(CONFIG_XRX200_PHY_FW) += xrx200_phy_fw.o
--- /dev/null
+++ b/arch/mips/lantiq/xway/tffs.c
@@ -0,0 +1,87 @@
+#include <linux/module.h>
+#include <linux/mtd/mtd.h>
+#include <linux/errno.h>
+#include <linux/slab.h>
+
+struct tffs_entry {
+    uint16_t id;
+    uint16_t len;
+};
+
+static struct tffs_id {
+	uint32_t id;
+	char *name;
+	unsigned char *val;
+	uint32_t offset;
+	uint32_t len;
+} ids[] = {
+	{ 0x01A9, "annex" },
+	{ 0x0188, "maca" },
+	{ 0x0189, "macb" },
+	{ 0x018a, "macwlan" },
+	{ 0x0195, "macwlan2" },
+	{ 0x018b, "macdsl" },
+	{ 0x01C2, "webgui_pass" },
+	{ 0x01AB, "wlan_key" },
+};
+
+static struct mtd_info *tffs1, *tffs2;
+
+static struct tffs_id* tffs_find_id(int id)
+{
+	int i;
+
+	for (i = 0; i < ARRAY_SIZE(ids); i++)
+		if (id == ids[i].id)
+			return &ids[i];
+
+	return NULL;
+}
+
+static void tffs_index(void)
+{
+	struct tffs_entry *E = NULL;
+	struct tffs_entry entry;
+	int ret, retlen;
+
+	while ((unsigned int) E + sizeof(struct tffs_entry) < tffs2->size) {
+		struct tffs_id *id;
+		int len;
+
+		ret = mtd_read(tffs2, (unsigned int) E, sizeof(struct tffs_entry), &retlen, (unsigned char *)&entry);
+		if (ret)
+			return;
+
+		if (entry.id == 0xffff)
+			return;
+
+		id = tffs_find_id(entry.id);
+		if (id) {
+			id->offset = (uint32_t) E;
+			id->len = entry.len;
+			id->val = kzalloc(entry.len + 1, GFP_KERNEL);
+			mtd_read(tffs2, ((unsigned int) E) + sizeof(struct tffs_entry), entry.len, &retlen, id->val);
+
+		}
+		//printk(KERN_INFO "found entry at 0x%08X-> [<0x%x> %u bytes]\n", (uint32_t) E, entry.id, entry.len);
+		if (id && id->name)
+			printk(KERN_INFO "found entry name -> %s=%s\n", id->name, id->val);
+
+		len = (entry.len + 3) & ~0x03;
+		E = (struct tffs_entry *)(((unsigned int)E) + sizeof(struct tffs_entry) + len);
+	}
+}
+
+static int __init tffs_init(void)
+{
+	tffs1 = get_mtd_device_nm("tffs (1)");
+	tffs2 = get_mtd_device_nm("tffs (2)");
+	if (IS_ERR(tffs1) || IS_ERR(tffs2))
+		return -1;
+
+	tffs_index();
+
+	return 0;
+}
+late_initcall(tffs_init);
+
