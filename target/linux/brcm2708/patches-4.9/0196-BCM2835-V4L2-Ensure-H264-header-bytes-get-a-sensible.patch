From 02ceda02182f6cb538be397b8d8f34b64a254559 Mon Sep 17 00:00:00 2001
From: Dave Stevenson <dave.stevenson@raspberrypi.org>
Date: Mon, 13 Feb 2017 11:10:50 +0000
Subject: [PATCH] BCM2835-V4L2: Ensure H264 header bytes get a sensible
 timestamp

H264 header come off VC with 0 timestamps, which means they get a
strange timestamp when processed with VC/kernel start times,
particularly if used with the inline header option.
Remember the last frame timestamp and use that if set, or otherwise
use the kernel start time.

https://github.com/raspberrypi/linux/issues/1836

Signed-off-by: Dave Stevenson <dave.stevenson@raspberrypi.org>
---
 drivers/media/platform/bcm2835/bcm2835-camera.c | 30 ++++++++++++++++++++++---
 drivers/media/platform/bcm2835/bcm2835-camera.h |  2 ++
 2 files changed, 29 insertions(+), 3 deletions(-)

--- a/drivers/media/platform/bcm2835/bcm2835-camera.c
+++ b/drivers/media/platform/bcm2835/bcm2835-camera.c
@@ -356,8 +356,13 @@ static void buffer_cb(struct vchiq_mmal_
 		}
 	} else {
 		if (dev->capture.frame_count) {
-			if (dev->capture.vc_start_timestamp != -1 &&
-			    pts != 0) {
+			if (dev->capture.vc_start_timestamp == -1) {
+				buf->vb.vb2_buf.timestamp = ktime_get_ns();
+				v4l2_dbg(1, bcm2835_v4l2_debug, &dev->v4l2_dev,
+				 "Buffer time set as current time - %lld",
+				 buf->vb.vb2_buf.timestamp);
+
+			} else if(pts != 0) {
 				struct timeval timestamp;
 				s64 runtime_us = pts -
 				    dev->capture.vc_start_timestamp;
@@ -390,10 +395,27 @@ static void buffer_cb(struct vchiq_mmal_
 				buf->vb.vb2_buf.timestamp = timestamp.tv_sec * 1000000000ULL +
 					timestamp.tv_usec * 1000ULL;
 			} else {
-				buf->vb.vb2_buf.timestamp = ktime_get_ns();
+				if (dev->capture.last_timestamp) {
+					buf->vb.vb2_buf.timestamp = dev->capture.last_timestamp;
+					v4l2_dbg(1, bcm2835_v4l2_debug, &dev->v4l2_dev,
+					 "Buffer time set as last timestamp - %lld",
+					 buf->vb.vb2_buf.timestamp);
+				}
+				else {
+					buf->vb.vb2_buf.timestamp =
+					dev->capture.kernel_start_ts.tv_sec  * 1000000000ULL +
+					dev->capture.kernel_start_ts.tv_usec * 1000ULL;
+					v4l2_dbg(1, bcm2835_v4l2_debug, &dev->v4l2_dev,
+					 "Buffer time set as start timestamp - %lld",
+					 buf->vb.vb2_buf.timestamp);
+				}
 			}
+			dev->capture.last_timestamp = buf->vb.vb2_buf.timestamp;
 
 			vb2_set_plane_payload(&buf->vb.vb2_buf, 0, length);
+			v4l2_dbg(1, bcm2835_v4l2_debug, &dev->v4l2_dev,
+				"Buffer has ts %llu",
+				dev->capture.last_timestamp);
 			vb2_buffer_done(&buf->vb.vb2_buf, VB2_BUF_STATE_DONE);
 
 			if (mmal_flags & MMAL_BUFFER_HEADER_FLAG_EOS &&
@@ -559,6 +581,8 @@ static int start_streaming(struct vb2_qu
 			 "Start time %lld size %d\n",
 			 dev->capture.vc_start_timestamp, parameter_size);
 
+	dev->capture.last_timestamp = 0;
+
 	v4l2_get_timestamp(&dev->capture.kernel_start_ts);
 
 	/* enable the camera port */
--- a/drivers/media/platform/bcm2835/bcm2835-camera.h
+++ b/drivers/media/platform/bcm2835/bcm2835-camera.h
@@ -93,6 +93,8 @@ struct bm2835_mmal_dev {
 		s64         vc_start_timestamp;
 		/* Kernel start timestamp for streaming */
 		struct timeval kernel_start_ts;
+		/* Timestamp of last frame */
+		u64 		last_timestamp;
 
 		struct vchiq_mmal_port  *port; /* port being used for capture */
 		/* camera port being used for capture */
