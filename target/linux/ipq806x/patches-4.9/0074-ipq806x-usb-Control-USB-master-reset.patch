From a86bda9f8a7965f0cedd347a9c04800eb9f41ea3 Mon Sep 17 00:00:00 2001
From: Vasudevan Murugesan <vmuruges@codeaurora.org>
Date: Tue, 21 Jul 2015 10:22:38 +0530
Subject: ipq806x: usb: Control USB master reset

During removal of the glue layer(dwc3-of-simple),
USB master reset is set to active and during insertion
it is de-activated.

Change-Id: I537dc810f6cb2a46664ee674840145066432b957
Signed-off-by: Vasudevan Murugesan <vmuruges@codeaurora.org>
(cherry picked from commit 4611e13580a216812f85f0801b95442d02eeb836)
---
 drivers/usb/dwc3/dwc3-of-simple.c | 22 ++++++++++++++++++++++
 1 file changed, 12 insertions(+)

(limited to 'drivers/usb/dwc3/dwc3-of-simple.c')

diff --git a/drivers/usb/dwc3/dwc3-of-simple.c b/drivers/usb/dwc3/dwc3-of-simple.c
index f9e92ef..49bf556 100644
--- a/drivers/usb/dwc3/dwc3-of-simple.c
+++ b/drivers/usb/dwc3/dwc3-of-simple.c
@@ -26,6 +26,7 @@
 #include <linux/dma-mapping.h>
 #include <linux/clk.h>
 #include <linux/clk-provider.h>
+#include <linux/reset.h>
 #include <linux/of.h>
 #include <linux/of_platform.h>
 #include <linux/pm_runtime.h>
@@ -34,6 +35,8 @@ struct dwc3_of_simple {
 	struct device		*dev;
 	struct clk		**clks;
 	int			num_clocks;
+	struct reset_control	*mstr_rst_30_0;
+	struct reset_control	*mstr_rst_30_1;
 };
 
 static int dwc3_of_simple_probe(struct platform_device *pdev)
@@ -89,6 +92,20 @@ static int dwc3_of_simple_probe(struct platform_device *pdev)
 		simple->clks[i] = clk;
 	}
 
+	simple->mstr_rst_30_0 = devm_reset_control_get(dev, "usb30_0_mstr_rst");
+
+	if (!IS_ERR(simple->mstr_rst_30_0))
+		reset_control_deassert(simple->mstr_rst_30_0);
+	else
+		dev_dbg(simple->dev, "cannot get handle for USB PHY 0 master reset control\n");
+
+	simple->mstr_rst_30_1 = devm_reset_control_get(dev, "usb30_1_mstr_rst");
+
+	if (!IS_ERR(simple->mstr_rst_30_1))
+		reset_control_deassert(simple->mstr_rst_30_1);
+	else
+		dev_dbg(simple->dev, "cannot get handle for USB PHY 1 master reset control\n");
+
 	ret = of_platform_populate(np, NULL, NULL, dev);
 	if (ret) {
 		for (i = 0; i < simple->num_clocks; i++) {
@@ -117,6 +134,12 @@ static int dwc3_of_simple_remove(struct platform_device *pdev)
 		clk_put(simple->clks[i]);
 	}
 
+	if (!IS_ERR(simple->mstr_rst_30_0))
+		reset_control_assert(simple->mstr_rst_30_0);
+
+	if (!IS_ERR(simple->mstr_rst_30_1))
+		reset_control_assert(simple->mstr_rst_30_1);
+
 	of_platform_depopulate(dev);
 
 	pm_runtime_put_sync(dev);
-- 
cgit v1.1
