--- a/source3/rpc_server/rpc_service_setup.c
+++ b/source3/rpc_server/rpc_service_setup.c
@@ -553,10 +553,12 @@ bool dcesrv_ep_setup(struct tevent_conte
 		goto done;
 	}
 
+#ifdef PRINTER_SUPPORT
 	ok = rpc_setup_spoolss(ev_ctx, msg_ctx);
 	if (!ok) {
 		goto done;
 	}
+#endif
 
 	ok = rpc_setup_svcctl(ev_ctx, msg_ctx);
 	if (!ok) {
--- a/source3/rpcclient/rpcclient.c
+++ b/source3/rpcclient/rpcclient.c
@@ -618,7 +618,9 @@ static struct cmd_set *rpcclient_command
 	lsarpc_commands,
 	ds_commands,
 	samr_commands,
+#ifdef PRINTER_SUPPORT
 	spoolss_commands,
+#endif
 	netlogon_commands,
 	srvsvc_commands,
 	dfs_commands,
--- a/source3/rpc_server/svcctl/srv_svcctl_nt.c
+++ b/source3/rpc_server/svcctl/srv_svcctl_nt.c
@@ -86,9 +86,11 @@ bool init_service_op_table( void )
 
 	/* add builtin services */
 
+#ifdef PRINTER_SUPPORT
 	svcctl_ops[i].name = talloc_strdup( svcctl_ops, "Spooler" );
 	svcctl_ops[i].ops  = &spoolss_svc_ops;
 	i++;
+#endif
 
 	svcctl_ops[i].name = talloc_strdup( svcctl_ops, "NETLOGON" );
 	svcctl_ops[i].ops  = &netlogon_svc_ops;
--- a/source3/printing/spoolssd.c
+++ b/source3/printing/spoolssd.c
@@ -614,6 +614,10 @@ pid_t start_spoolssd(struct tevent_conte
 	int ret;
 	bool ok;
 
+#ifndef PRINTER_SUPPORT
+	return;
+#endif
+
 	DEBUG(1, ("Forking SPOOLSS Daemon\n"));
 
 	/*
--- a/source3/utils/net_rpc.c
+++ b/source3/utils/net_rpc.c
@@ -7987,6 +7987,10 @@ static int rpc_printer_publish(struct ne
 		{NULL, NULL, 0, NULL, NULL}
 	};
 
+#ifndef PRINTER_SUPPORT
+	return 0;
+#endif
+
 	if (argc == 0) {
 		if (c->display_usage) {
 			d_printf(_("Usage:\n"));
--- a/source3/smbd/reply.c
+++ b/source3/smbd/reply.c
@@ -5765,7 +5765,11 @@ void reply_printopen(struct smb_request
 		return;
 	}
 
-	if (!CAN_PRINT(conn)) {
+
+#ifdef PRINTER_SUPPORT
+	if (!CAN_PRINT(conn))
+#endif
+	{
 		reply_nterror(req, NT_STATUS_ACCESS_DENIED);
 		END_PROFILE(SMBsplopen);
 		return;
@@ -5871,7 +5875,10 @@ void reply_printqueue(struct smb_request
 	   is really quite gross and only worked when there was only
 	   one printer - I think we should now only accept it if they
 	   get it right (tridge) */
-	if (!CAN_PRINT(conn)) {
+#ifdef PRINTER_SUPPORT
+	if (!CAN_PRINT(conn))
+#endif
+	{
 		reply_nterror(req, NT_STATUS_ACCESS_DENIED);
 		END_PROFILE(SMBsplretq);
 		return;
--- a/source3/smbd/lanman.c
+++ b/source3/smbd/lanman.c
@@ -784,6 +784,10 @@ static bool api_DosPrintQGetInfo(struct
 	union spoolss_JobInfo *job_info = NULL;
 	union spoolss_PrinterInfo printer_info;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -999,6 +1003,10 @@ static bool api_DosPrintQEnum(struct smb
 	union spoolss_DriverInfo *driver_info;
 	union spoolss_JobInfo **job_info;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!param_format || !output_format1 || !p) {
 		return False;
 	}
@@ -3114,6 +3122,10 @@ static bool api_RDosPrintJobDel(struct s
 	struct spoolss_DevmodeContainer devmode_ctr;
 	enum spoolss_JobControl command;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -3247,6 +3259,10 @@ static bool api_WPrintQueueCtrl(struct s
 	struct sec_desc_buf secdesc_ctr;
 	enum spoolss_PrinterControl command;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !QueueName) {
 		return False;
 	}
@@ -3413,6 +3429,10 @@ static bool api_PrintJobInfo(struct smbd
 	union spoolss_JobInfo info;
 	struct spoolss_SetJobInfo1 info1;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -4567,6 +4587,10 @@ static bool api_WPrintJobGetInfo(struct
 	struct spoolss_DevmodeContainer devmode_ctr;
 	union spoolss_JobInfo info;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -4705,6 +4729,10 @@ static bool api_WPrintJobEnumerate(struc
 	uint32_t count = 0;
 	union spoolss_JobInfo *info;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -4910,6 +4938,10 @@ static bool api_WPrintDestGetInfo(struct
 	struct spoolss_DevmodeContainer devmode_ctr;
 	union spoolss_PrinterInfo info;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -5046,6 +5078,10 @@ static bool api_WPrintDestEnum(struct sm
 	union spoolss_PrinterInfo *info;
 	uint32_t count;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -5149,6 +5185,10 @@ static bool api_WPrintDriverEnum(struct
 	int succnt;
 	struct pack_desc desc;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -5213,6 +5253,10 @@ static bool api_WPrintQProcEnum(struct s
 	int succnt;
 	struct pack_desc desc;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
@@ -5277,6 +5321,10 @@ static bool api_WPrintPortEnum(struct sm
 	int succnt;
 	struct pack_desc desc;
 
+#ifndef PRINTER_SUPPORT
+	return False;
+#endif
+
 	if (!str1 || !str2 || !p) {
 		return False;
 	}
--- a/source3/smbd/server_exit.c
+++ b/source3/smbd/server_exit.c
@@ -198,7 +198,9 @@ static void exit_server_common(enum serv
 		rpc_eventlog_shutdown();
 		rpc_ntsvcs_shutdown();
 		rpc_svcctl_shutdown();
+#ifdef PRINTER_SUPPORT
 		rpc_spoolss_shutdown();
+#endif
 
 		rpc_srvsvc_shutdown();
 		rpc_winreg_shutdown();
--- a/source3/smbd/open.c
+++ b/source3/smbd/open.c
@@ -2430,6 +2430,9 @@ static NTSTATUS open_file_ntcreate(conne
 		 * Most of the passed parameters are ignored.
 		 */
 
+#ifndef PRINTER_SUPPORT
+		return NT_STATUS_ACCESS_DENIED;
+#endif
 		if (pinfo) {
 			*pinfo = FILE_WAS_CREATED;
 		}
--- a/source3/smbd/close.c
+++ b/source3/smbd/close.c
@@ -727,6 +727,9 @@ static NTSTATUS close_normal_file(struct
 	}
 
 	if (fsp->print_file) {
+#ifndef PRINTER_SUPPORT
+		return NT_STATUS_OK;
+#endif
 		/* FIXME: return spool errors */
 		print_spool_end(fsp, close_type);
 		file_free(req, fsp);
--- a/source3/smbd/fileio.c
+++ b/source3/smbd/fileio.c
@@ -318,6 +318,10 @@ ssize_t write_file(struct smb_request *r
 		uint32_t t;
 		int ret;
 
+#ifndef PRINTER_SUPPORT
+		return -1;
+#endif
+
 		ret = print_spool_write(fsp, data, n, pos, &t);
 		if (ret) {
 			errno = ret;
--- a/source3/smbd/smb2_create.c
+++ b/source3/smbd/smb2_create.c
@@ -633,7 +633,10 @@ static struct tevent_req *smbd_smb2_crea
 		}
 
 		status = file_new(smb1req, smb1req->conn, &result);
-		if(!NT_STATUS_IS_OK(status)) {
+#ifdef PRINTER_SUPPORT
+		if(!NT_STATUS_IS_OK(status))
+#endif
+		{
 			tevent_req_nterror(req, status);
 			return tevent_req_post(req, ev);
 		}
--- a/source3/smbd/process.c
+++ b/source3/smbd/process.c
@@ -2895,8 +2895,10 @@ static bool housekeeping_fn(const struct
 
 	change_to_root_user();
 
+#ifdef PRINTER_SUPPORT
 	/* update printer queue caches if necessary */
 	update_monitored_printq_cache(sconn->msg_ctx);
+#endif
 
 	/* check if we need to reload services */
 	check_reload(sconn, time_mono(NULL));
--- a/source3/smbd/server.c
+++ b/source3/smbd/server.c
@@ -1679,6 +1679,7 @@ extern void build_options(bool screen);
 			start_fssd(ev_ctx, msg_ctx);
 		}
 
+#ifdef PRINTER_SUPPORT
 		if (!lp__disable_spoolss() &&
 		    (rpc_spoolss_daemon() != RPC_DAEMON_DISABLED)) {
 			bool bgq = lp_parm_bool(-1, "smbd", "backgroundqueue", true);
@@ -1699,6 +1700,7 @@ extern void build_options(bool screen);
 		if (!printing_subsystem_init(ev_ctx, msg_ctx, false, false)) {
 			exit(1);
 		}
+#endif
 	}
 
 	if (!is_daemon) {
@@ -1731,12 +1733,14 @@ extern void build_options(bool screen);
 	if (!open_sockets_smbd(parent, ev_ctx, msg_ctx, ports))
 		exit_server("open_sockets_smbd() failed");
 
+#ifdef PRINTER_SUPPORT
 	/* do a printer update now that all messaging has been set up,
 	 * before we allow clients to start connecting */
 	if (!lp__disable_spoolss() &&
 	    (rpc_spoolss_daemon() != RPC_DAEMON_DISABLED)) {
 		printing_subsystem_update(ev_ctx, msg_ctx, false);
 	}
+#endif
 
 	TALLOC_FREE(frame);
 	/* make sure we always have a valid stackframe */
--- a/source3/printing/pcap.c
+++ b/source3/printing/pcap.c
@@ -132,6 +132,7 @@ void pcap_cache_reload(struct tevent_con
 		       void (*post_cache_fill_fn)(struct tevent_context *,
 						  struct messaging_context *))
 {
+#ifdef PRINTER_SUPPORT
 	const char *pcap_name = lp_printcapname();
 	bool pcap_reloaded = False;
 	bool post_cache_fill_fn_handled = false;
@@ -204,6 +205,7 @@ done:
 	pcap_cache_destroy_specific(&pcache);
 
 	return;
+#endif
 }
 
 
