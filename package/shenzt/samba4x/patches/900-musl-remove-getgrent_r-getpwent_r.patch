--- a/source4/torture/local/nss_tests.c
+++ b/source4/torture/local/nss_tests.c
@@ -346,28 +346,6 @@ static bool test_enum_r_passwd(struct to
 	torture_comment(tctx, "Testing setpwent\n");
 	setpwent();
 
-	while (1) {
-		torture_comment(tctx, "Testing getpwent_r\n");
-
-#ifdef SOLARIS_GETPWENT_R
-		ret = getpwent_r(&pwd, buffer, sizeof(buffer));
-#else /* SOLARIS_GETPWENT_R */
-		ret = getpwent_r(&pwd, buffer, sizeof(buffer), &pwdp);
-#endif /* SOLARIS_GETPWENT_R */
-		if (ret != 0) {
-			if (ret != ENOENT) {
-				torture_comment(tctx, "got %d return code\n", ret);
-			}
-			break;
-		}
-		print_passwd(&pwd);
-		if (pwd_array_p && num_pwd_p) {
-			pwd_array = talloc_realloc(tctx, pwd_array, struct passwd, num_pwd+1);
-			torture_assert(tctx, pwd_array, "out of memory");
-			copy_passwd(tctx, &pwd, &pwd_array[num_pwd]);
-			num_pwd++;
-		}
-	}
 
 	torture_comment(tctx, "Testing endpwent\n");
 	endpwent();
@@ -544,28 +522,6 @@ static bool test_enum_r_group(struct tor
 	torture_comment(tctx, "Testing setgrent\n");
 	setgrent();
 
-	while (1) {
-		torture_comment(tctx, "Testing getgrent_r\n");
-
-#ifdef SOLARIS_GETGRENT_R
-		ret = getgrent_r(&grp, buffer, sizeof(buffer));
-#else /* SOLARIS_GETGRENT_R */
-		ret = getgrent_r(&grp, buffer, sizeof(buffer), &grpp);
-#endif /* SOLARIS_GETGRENT_R */
-		if (ret != 0) {
-			if (ret != ENOENT) {
-				torture_comment(tctx, "got %d return code\n", ret);
-			}
-			break;
-		}
-		print_group(&grp);
-		if (grp_array_p && num_grp_p) {
-			grp_array = talloc_realloc(tctx, grp_array, struct group, num_grp+1);
-			torture_assert(tctx, grp_array, "out of memory");
-			copy_group(tctx, &grp, &grp_array[num_grp]);
-			num_grp++;
-		}
-	}
 
 	torture_comment(tctx, "Testing endgrent\n");
 	endgrent();
