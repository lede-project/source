# DO NOT EDIT. This file is generated from Config.src
#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Networking Utilities"

config BUSYBOX_CONFIG_FEATURE_IPV6
	bool "Enable IPv6 support"
	default BUSYBOX_DEFAULT_FEATURE_IPV6
	help
	  Enable IPv6 support in busybox.
	  This adds IPv6 support in the networking applets.

config BUSYBOX_CONFIG_FEATURE_UNIX_LOCAL
	bool "Enable Unix domain socket support (usually not needed)"
	default BUSYBOX_DEFAULT_FEATURE_UNIX_LOCAL
	help
	  Enable Unix domain socket support in all busybox networking
	  applets.  Address of the form local:/path/to/unix/socket
	  will be recognized.

	  This extension is almost never used in real world usage.
	  You most likely want to say N.

config BUSYBOX_CONFIG_FEATURE_PREFER_IPV4_ADDRESS
	bool "Prefer IPv4 addresses from DNS queries"
	default BUSYBOX_DEFAULT_FEATURE_PREFER_IPV4_ADDRESS
	depends on BUSYBOX_CONFIG_FEATURE_IPV6
	help
	  Use IPv4 address of network host if it has one.

	  If this option is off, the first returned address will be used.
	  This may cause problems when your DNS server is IPv6-capable and
	  is returning IPv6 host addresses too. If IPv6 address
	  precedes IPv4 one in DNS reply, busybox network applets
	  (e.g. wget) will use IPv6 address. On an IPv6-incapable host
	  or network applets will fail to connect to the host
	  using IPv6 address.

config BUSYBOX_CONFIG_VERBOSE_RESOLUTION_ERRORS
	bool "Verbose resolution errors"
	default BUSYBOX_DEFAULT_VERBOSE_RESOLUTION_ERRORS
	help
	  Enable if you are not satisfied with simplistic
	  "can't resolve 'hostname.com'" and want to know more.
	  This may increase size of your executable a bit.

config BUSYBOX_CONFIG_ARP
	bool "arp"
	default BUSYBOX_DEFAULT_ARP
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Manipulate the system ARP cache.
config BUSYBOX_CONFIG_ARPING
	bool "arping"
	default BUSYBOX_DEFAULT_ARPING
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Ping hosts by ARP packets.

config BUSYBOX_CONFIG_BRCTL
	bool "brctl"
	default BUSYBOX_DEFAULT_BRCTL
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Manage ethernet bridges.
	  Supports addbr/delbr and addif/delif.

config BUSYBOX_CONFIG_FEATURE_BRCTL_FANCY
	bool "Fancy options"
	default BUSYBOX_DEFAULT_FEATURE_BRCTL_FANCY
	depends on BUSYBOX_CONFIG_BRCTL
	help
	  Add support for extended option like:
	    setageing, setfd, sethello, setmaxage,
	    setpathcost, setportprio, setbridgeprio,
	    stp
	  This adds about 600 bytes.

config BUSYBOX_CONFIG_FEATURE_BRCTL_SHOW
	bool "Support show"
	default BUSYBOX_DEFAULT_FEATURE_BRCTL_SHOW
	depends on BUSYBOX_CONFIG_BRCTL && BUSYBOX_CONFIG_FEATURE_BRCTL_FANCY
	help
	  Add support for option which prints the current config:
	    show
config BUSYBOX_CONFIG_DNSD
	bool "dnsd"
	default BUSYBOX_DEFAULT_DNSD
	help
	  Small and static DNS server daemon.
config BUSYBOX_CONFIG_ETHER_WAKE
	bool "ether-wake"
	default BUSYBOX_DEFAULT_ETHER_WAKE
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Send a magic packet to wake up sleeping machines.
config BUSYBOX_CONFIG_FTPD
	bool "ftpd"
	default BUSYBOX_DEFAULT_FTPD
	help
	  simple FTP daemon. You have to run it via inetd.

config BUSYBOX_CONFIG_FEATURE_FTPD_WRITE
	bool "Enable upload commands"
	default BUSYBOX_DEFAULT_FEATURE_FTPD_WRITE
	depends on BUSYBOX_CONFIG_FTPD
	help
	  Enable all kinds of FTP upload commands (-w option)

config BUSYBOX_CONFIG_FEATURE_FTPD_ACCEPT_BROKEN_LIST
	bool "Enable workaround for RFC-violating clients"
	default BUSYBOX_DEFAULT_FEATURE_FTPD_ACCEPT_BROKEN_LIST
	depends on BUSYBOX_CONFIG_FTPD
	help
	  Some ftp clients (among them KDE's Konqueror) issue illegal
	  "LIST -l" requests. This option works around such problems.
	  It might prevent you from listing files starting with "-" and
	  it increases the code size by ~40 bytes.
	  Most other ftp servers seem to behave similar to this.

config BUSYBOX_CONFIG_FEATURE_FTPD_AUTHENTICATION
	bool "Enable authentication"
	default BUSYBOX_DEFAULT_FEATURE_FTPD_AUTHENTICATION
	depends on BUSYBOX_CONFIG_FTPD
	help
	  Enable basic system login as seen in telnet etc.
config BUSYBOX_CONFIG_FTPGET
	bool "ftpget"
	default BUSYBOX_DEFAULT_FTPGET
	help
	  Retrieve a remote file via FTP.

config BUSYBOX_CONFIG_FTPPUT
	bool "ftpput"
	default BUSYBOX_DEFAULT_FTPPUT
	help
	  Store a remote file via FTP.

config BUSYBOX_CONFIG_FEATURE_FTPGETPUT_LONG_OPTIONS
	bool "Enable long options in ftpget/ftpput"
	default BUSYBOX_DEFAULT_FEATURE_FTPGETPUT_LONG_OPTIONS
	depends on BUSYBOX_CONFIG_LONG_OPTS && (BUSYBOX_CONFIG_FTPGET || BUSYBOX_CONFIG_FTPPUT)
	help
	  Support long options for the ftpget/ftpput applet.
config BUSYBOX_CONFIG_HOSTNAME
	bool "hostname"
	default BUSYBOX_DEFAULT_HOSTNAME
	help
	  Show or set the system's host name.

config BUSYBOX_CONFIG_DNSDOMAINNAME
	bool "dnsdomainname"
	default BUSYBOX_DEFAULT_DNSDOMAINNAME
	help
	  Alias to "hostname -d".
config BUSYBOX_CONFIG_HTTPD
	bool "httpd"
	default BUSYBOX_DEFAULT_HTTPD
	help
	  Serve web pages via an HTTP server.

config BUSYBOX_CONFIG_FEATURE_HTTPD_RANGES
	bool "Support 'Ranges:' header"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_RANGES
	depends on BUSYBOX_CONFIG_HTTPD
	help
	  Makes httpd emit "Accept-Ranges: bytes" header and understand
	  "Range: bytes=NNN-[MMM]" header. Allows for resuming interrupted
	  downloads, seeking in multimedia players etc.

config BUSYBOX_CONFIG_FEATURE_HTTPD_SETUID
	bool "Enable -u <user> option"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_SETUID
	depends on BUSYBOX_CONFIG_HTTPD
	help
	  This option allows the server to run as a specific user
	  rather than defaulting to the user that starts the server.
	  Use of this option requires special privileges to change to a
	  different user.

config BUSYBOX_CONFIG_FEATURE_HTTPD_BASIC_AUTH
	bool "Enable Basic http Authentication"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_BASIC_AUTH
	depends on BUSYBOX_CONFIG_HTTPD
	help
	  Utilizes password settings from /etc/httpd.conf for basic
	  authentication on a per url basis.
	  Example for httpd.conf file:
	  /adm:toor:PaSsWd

config BUSYBOX_CONFIG_FEATURE_HTTPD_AUTH_MD5
	bool "Support MD5 crypted passwords for http Authentication"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_AUTH_MD5
	depends on BUSYBOX_CONFIG_FEATURE_HTTPD_BASIC_AUTH
	help
	  Enables encrypted passwords, and wildcard user/passwords
	  in httpd.conf file.
	  User '*' means 'any system user name is ok',
	  password of '*' means 'use system password for this user'
	  Examples:
	  /adm:toor:$1$P/eKnWXS$aI1aPGxT.dJD5SzqAKWrF0
	  /adm:root:*
	  /wiki:*:*

config BUSYBOX_CONFIG_FEATURE_HTTPD_CGI
	bool "Support Common Gateway Interface (CGI)"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_CGI
	depends on BUSYBOX_CONFIG_HTTPD
	help
	  This option allows scripts and executables to be invoked
	  when specific URLs are requested.

config BUSYBOX_CONFIG_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR
	bool "Support for running scripts through an interpreter"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR
	depends on BUSYBOX_CONFIG_FEATURE_HTTPD_CGI
	help
	  This option enables support for running scripts through an
	  interpreter. Turn this on if you want PHP scripts to work
	  properly. You need to supply an additional line in your
	  httpd.conf file:
	  *.php:/path/to/your/php

config BUSYBOX_CONFIG_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV
	bool "Set REMOTE_PORT environment variable for CGI"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV
	depends on BUSYBOX_CONFIG_FEATURE_HTTPD_CGI
	help
	  Use of this option can assist scripts in generating
	  references that contain a unique port number.

config BUSYBOX_CONFIG_FEATURE_HTTPD_ENCODE_URL_STR
	bool "Enable -e option (useful for CGIs written as shell scripts)"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_ENCODE_URL_STR
	depends on BUSYBOX_CONFIG_HTTPD
	help
	  This option allows html encoding of arbitrary strings for display
	  by the browser. Output goes to stdout.
	  For example, httpd -e "<Hello World>" produces
	  "&#60Hello&#32World&#62".

config BUSYBOX_CONFIG_FEATURE_HTTPD_ERROR_PAGES
	bool "Support for custom error pages"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_ERROR_PAGES
	depends on BUSYBOX_CONFIG_HTTPD
	help
	  This option allows you to define custom error pages in
	  the configuration file instead of the default HTTP status
	  error pages. For instance, if you add the line:
	        E404:/path/e404.html
	  in the config file, the server will respond the specified
	  '/path/e404.html' file instead of the terse '404 NOT FOUND'
	  message.

config BUSYBOX_CONFIG_FEATURE_HTTPD_PROXY
	bool "Support for reverse proxy"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_PROXY
	depends on BUSYBOX_CONFIG_HTTPD
	help
	  This option allows you to define URLs that will be forwarded
	  to another HTTP server. To setup add the following line to the
	  configuration file
	        P:/url/:http://hostname[:port]/new/path/
	  Then a request to /url/myfile will be forwarded to
	  http://hostname[:port]/new/path/myfile.

config BUSYBOX_CONFIG_FEATURE_HTTPD_GZIP
	bool "Support for GZIP content encoding"
	default BUSYBOX_DEFAULT_FEATURE_HTTPD_GZIP
	depends on BUSYBOX_CONFIG_HTTPD
	help
	  Makes httpd send files using GZIP content encoding if the
	  client supports it and a pre-compressed <file>.gz exists.
config BUSYBOX_CONFIG_IFCONFIG
	bool "ifconfig"
	default BUSYBOX_DEFAULT_IFCONFIG
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Ifconfig is used to configure the kernel-resident network interfaces.

config BUSYBOX_CONFIG_FEATURE_IFCONFIG_STATUS
	bool "Enable status reporting output (+7k)"
	default BUSYBOX_DEFAULT_FEATURE_IFCONFIG_STATUS
	depends on BUSYBOX_CONFIG_IFCONFIG
	help
	  If ifconfig is called with no arguments it will display the status
	  of the currently active interfaces.

config BUSYBOX_CONFIG_FEATURE_IFCONFIG_SLIP
	bool "Enable slip-specific options \"keepalive\" and \"outfill\""
	default BUSYBOX_DEFAULT_FEATURE_IFCONFIG_SLIP
	depends on BUSYBOX_CONFIG_IFCONFIG
	help
	  Allow "keepalive" and "outfill" support for SLIP. If you're not
	  planning on using serial lines, leave this unchecked.

config BUSYBOX_CONFIG_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ
	bool "Enable options \"mem_start\", \"io_addr\", and \"irq\""
	default BUSYBOX_DEFAULT_FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ
	depends on BUSYBOX_CONFIG_IFCONFIG
	help
	  Allow the start address for shared memory, start address for I/O,
	  and/or the interrupt line used by the specified device.

config BUSYBOX_CONFIG_FEATURE_IFCONFIG_HW
	bool "Enable option \"hw\" (ether only)"
	default BUSYBOX_DEFAULT_FEATURE_IFCONFIG_HW
	depends on BUSYBOX_CONFIG_IFCONFIG
	help
	  Set the hardware address of this interface, if the device driver
	  supports  this  operation. Currently, we only support the 'ether'
	  class.

config BUSYBOX_CONFIG_FEATURE_IFCONFIG_BROADCAST_PLUS
	bool "Set the broadcast automatically"
	default BUSYBOX_DEFAULT_FEATURE_IFCONFIG_BROADCAST_PLUS
	depends on BUSYBOX_CONFIG_IFCONFIG
	help
	  Setting this will make ifconfig attempt to find the broadcast
	  automatically if the value '+' is used.
config BUSYBOX_CONFIG_IFENSLAVE
	bool "ifenslave"
	default BUSYBOX_DEFAULT_IFENSLAVE
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Userspace application to bind several interfaces
	  to a logical interface (use with kernel bonding driver).
config BUSYBOX_CONFIG_IFPLUGD
	bool "ifplugd"
	default BUSYBOX_DEFAULT_IFPLUGD
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Network interface plug detection daemon.
config BUSYBOX_CONFIG_IFUP
	bool "ifup"
	default BUSYBOX_DEFAULT_IFUP
	help
	  Activate the specified interfaces. This applet makes use
	  of either "ifconfig" and "route" or the "ip" command to actually
	  configure network interfaces. Therefore, you will probably also want
	  to enable either IFCONFIG and ROUTE, or enable
	  FEATURE_IFUPDOWN_IP and the various IP options. Of
	  course you could use non-busybox versions of these programs, so
	  against my better judgement (since this will surely result in plenty
	  of support questions on the mailing list), I do not force you to
	  enable these additional options. It is up to you to supply either
	  "ifconfig", "route" and "run-parts" or the "ip" command, either
	  via busybox or via standalone utilities.

config BUSYBOX_CONFIG_IFDOWN
	bool "ifdown"
	default BUSYBOX_DEFAULT_IFDOWN
	help
	  Deactivate the specified interfaces.

config BUSYBOX_CONFIG_IFUPDOWN_IFSTATE_PATH
	string "Absolute path to ifstate file"
	default BUSYBOX_DEFAULT_IFUPDOWN_IFSTATE_PATH
	depends on BUSYBOX_CONFIG_IFUP || BUSYBOX_CONFIG_IFDOWN
	help
	  ifupdown keeps state information in a file called ifstate.
	  Typically it is located in /var/run/ifstate, however
	  some distributions tend to put it in other places
	  (debian, for example, uses /etc/network/run/ifstate).
	  This config option defines location of ifstate.

config BUSYBOX_CONFIG_FEATURE_IFUPDOWN_IP
	bool "Use ip tool (else ifconfig/route is used)"
	default BUSYBOX_DEFAULT_FEATURE_IFUPDOWN_IP
	depends on BUSYBOX_CONFIG_IFUP || BUSYBOX_CONFIG_IFDOWN
	help
	  Use the iproute "ip" command to implement "ifup" and "ifdown", rather
	  than the default of using the older "ifconfig" and "route" utilities.

	  If Y: you must install either the full-blown iproute2 package
	  or enable "ip" applet in Busybox, or the "ifup" and "ifdown" applets
	  will not work.

	  If N: you must install either the full-blown ifconfig and route
	  utilities, or enable these applets in Busybox.

config BUSYBOX_CONFIG_FEATURE_IFUPDOWN_IPV4
	bool "Support for IPv4"
	default BUSYBOX_DEFAULT_FEATURE_IFUPDOWN_IPV4
	depends on BUSYBOX_CONFIG_IFUP || BUSYBOX_CONFIG_IFDOWN
	help
	  If you want ifup/ifdown to talk IPv4, leave this on.

config BUSYBOX_CONFIG_FEATURE_IFUPDOWN_IPV6
	bool "Support for IPv6"
	default BUSYBOX_DEFAULT_FEATURE_IFUPDOWN_IPV6
	depends on (BUSYBOX_CONFIG_IFUP || BUSYBOX_CONFIG_IFDOWN) && BUSYBOX_CONFIG_FEATURE_IPV6
	help
	  If you need support for IPv6, turn this option on.


config BUSYBOX_CONFIG_FEATURE_IFUPDOWN_MAPPING
	bool "Enable mapping support"
	default BUSYBOX_DEFAULT_FEATURE_IFUPDOWN_MAPPING
	depends on BUSYBOX_CONFIG_IFUP || BUSYBOX_CONFIG_IFDOWN
	help
	  This enables support for the "mapping" stanza, unless you have
	  a weird network setup you don't need it.

config BUSYBOX_CONFIG_FEATURE_IFUPDOWN_EXTERNAL_DHCP
	bool "Support for external dhcp clients"
	default BUSYBOX_DEFAULT_FEATURE_IFUPDOWN_EXTERNAL_DHCP
	depends on BUSYBOX_CONFIG_IFUP || BUSYBOX_CONFIG_IFDOWN
	help
	  This enables support for the external dhcp clients. Clients are
	  tried in the following order: dhcpcd, dhclient, pump and udhcpc.
	  Otherwise, if udhcpc applet is enabled, it is used.
	  Otherwise, ifup/ifdown will have no support for DHCP.
config BUSYBOX_CONFIG_INETD
	bool "inetd"
	default BUSYBOX_DEFAULT_INETD
	select BUSYBOX_CONFIG_FEATURE_SYSLOG
	help
	  Internet superserver daemon

config BUSYBOX_CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_ECHO
	bool "Support echo service"
	default BUSYBOX_DEFAULT_FEATURE_INETD_SUPPORT_BUILTIN_ECHO
	depends on BUSYBOX_CONFIG_INETD
	help
	  Echo received data internal inetd service

config BUSYBOX_CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD
	bool "Support discard service"
	default BUSYBOX_DEFAULT_FEATURE_INETD_SUPPORT_BUILTIN_DISCARD
	depends on BUSYBOX_CONFIG_INETD
	help
	  Internet /dev/null internal inetd service

config BUSYBOX_CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_TIME
	bool "Support time service"
	default BUSYBOX_DEFAULT_FEATURE_INETD_SUPPORT_BUILTIN_TIME
	depends on BUSYBOX_CONFIG_INETD
	help
	  Return 32 bit time since 1900 internal inetd service

config BUSYBOX_CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME
	bool "Support daytime service"
	default BUSYBOX_DEFAULT_FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME
	depends on BUSYBOX_CONFIG_INETD
	help
	  Return human-readable time internal inetd service

config BUSYBOX_CONFIG_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN
	bool "Support chargen service"
	default BUSYBOX_DEFAULT_FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN
	depends on BUSYBOX_CONFIG_INETD
	help
	  Familiar character generator internal inetd service

config BUSYBOX_CONFIG_FEATURE_INETD_RPC
	bool "Support RPC services"
	default BUSYBOX_DEFAULT_FEATURE_INETD_RPC  # very rarely used, and needs Sun RPC support in libc
	depends on BUSYBOX_CONFIG_INETD
	select BUSYBOX_CONFIG_FEATURE_HAVE_RPC
	help
	  Support Sun-RPC based services
config BUSYBOX_CONFIG_IP
	bool "ip"
	default BUSYBOX_DEFAULT_IP
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  The "ip" applet is a TCP/IP interface configuration and routing
	  utility. You generally don't need "ip" to use busybox with
	  TCP/IP.

config BUSYBOX_CONFIG_IPADDR
	bool "ipaddr"
	default BUSYBOX_DEFAULT_IPADDR
	select BUSYBOX_CONFIG_FEATURE_IP_ADDRESS
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Support short form of ip addr: ipaddr

config BUSYBOX_CONFIG_IPLINK
	bool "iplink"
	default BUSYBOX_DEFAULT_IPLINK
	select BUSYBOX_CONFIG_FEATURE_IP_LINK
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Support short form of ip link: iplink

config BUSYBOX_CONFIG_IPROUTE
	bool "iproute"
	default BUSYBOX_DEFAULT_IPROUTE
	select BUSYBOX_CONFIG_FEATURE_IP_ROUTE
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Support short form of ip route: iproute

config BUSYBOX_CONFIG_IPTUNNEL
	bool "iptunnel"
	default BUSYBOX_DEFAULT_IPTUNNEL
	select BUSYBOX_CONFIG_FEATURE_IP_TUNNEL
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Support short form of ip tunnel: iptunnel

config BUSYBOX_CONFIG_IPRULE
	bool "iprule"
	default BUSYBOX_DEFAULT_IPRULE
	select BUSYBOX_CONFIG_FEATURE_IP_RULE
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Support short form of ip rule: iprule

config BUSYBOX_CONFIG_IPNEIGH
	bool "ipneigh"
	default BUSYBOX_DEFAULT_IPNEIGH
	select BUSYBOX_CONFIG_FEATURE_IP_NEIGH
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Support short form of ip neigh: ipneigh

config BUSYBOX_CONFIG_FEATURE_IP_ADDRESS
	bool "ip address"
	default BUSYBOX_DEFAULT_FEATURE_IP_ADDRESS
	depends on BUSYBOX_CONFIG_IP || BUSYBOX_CONFIG_IPADDR
	help
	  Address manipulation support for the "ip" applet.

config BUSYBOX_CONFIG_FEATURE_IP_LINK
	bool "ip link"
	default BUSYBOX_DEFAULT_FEATURE_IP_LINK
	depends on BUSYBOX_CONFIG_IP || BUSYBOX_CONFIG_IPLINK
	help
	  Configure network devices with "ip".

config BUSYBOX_CONFIG_FEATURE_IP_ROUTE
	bool "ip route"
	default BUSYBOX_DEFAULT_FEATURE_IP_ROUTE
	depends on BUSYBOX_CONFIG_IP || BUSYBOX_CONFIG_IPROUTE
	help
	  Add support for routing table management to "ip".

config BUSYBOX_CONFIG_FEATURE_IP_ROUTE_DIR
	string "ip route configuration directory"
	default BUSYBOX_DEFAULT_FEATURE_IP_ROUTE_DIR
	depends on BUSYBOX_CONFIG_FEATURE_IP_ROUTE
	help
	  Location of the "ip" applet routing configuration.

config BUSYBOX_CONFIG_FEATURE_IP_TUNNEL
	bool "ip tunnel"
	default BUSYBOX_DEFAULT_FEATURE_IP_TUNNEL
	depends on BUSYBOX_CONFIG_IP || BUSYBOX_CONFIG_IPTUNNEL
	help
	  Add support for tunneling commands to "ip".

config BUSYBOX_CONFIG_FEATURE_IP_RULE
	bool "ip rule"
	default BUSYBOX_DEFAULT_FEATURE_IP_RULE
	depends on BUSYBOX_CONFIG_IP || BUSYBOX_CONFIG_IPRULE
	help
	  Add support for rule commands to "ip".

config BUSYBOX_CONFIG_FEATURE_IP_NEIGH
	bool "ip neighbor"
	default BUSYBOX_DEFAULT_FEATURE_IP_NEIGH
	depends on BUSYBOX_CONFIG_IP || BUSYBOX_CONFIG_IPNEIGH
	help
	  Add support for neighbor commands to "ip".

config BUSYBOX_CONFIG_FEATURE_IP_RARE_PROTOCOLS
	bool "Support displaying rarely used link types"
	default BUSYBOX_DEFAULT_FEATURE_IP_RARE_PROTOCOLS
	depends on BUSYBOX_CONFIG_IP || BUSYBOX_CONFIG_IPADDR || BUSYBOX_CONFIG_IPLINK || BUSYBOX_CONFIG_IPROUTE || BUSYBOX_CONFIG_IPTUNNEL || BUSYBOX_CONFIG_IPRULE || BUSYBOX_CONFIG_IPNEIGH
	help
	  If you are not going to use links of type "frad", "econet",
	  "bif" etc, you probably don't need to enable this.
	  Ethernet, wireless, infrared, ppp/slip, ip tunnelling
	  link types are supported without this option selected.
config BUSYBOX_CONFIG_IPCALC
	bool "ipcalc"
	default BUSYBOX_DEFAULT_IPCALC
	help
	  ipcalc takes an IP address and netmask and calculates the
	  resulting broadcast, network, and host range.

config BUSYBOX_CONFIG_FEATURE_IPCALC_FANCY
	bool "Fancy IPCALC, more options, adds 1 kbyte"
	default BUSYBOX_DEFAULT_FEATURE_IPCALC_FANCY
	depends on BUSYBOX_CONFIG_IPCALC
	help
	  Adds the options hostname, prefix and silent to the output of
	  "ipcalc".

config BUSYBOX_CONFIG_FEATURE_IPCALC_LONG_OPTIONS
	bool "Enable long options"
	default BUSYBOX_DEFAULT_FEATURE_IPCALC_LONG_OPTIONS
	depends on BUSYBOX_CONFIG_IPCALC && BUSYBOX_CONFIG_LONG_OPTS
	help
	  Support long options for the ipcalc applet.
config BUSYBOX_CONFIG_FAKEIDENTD
	bool "fakeidentd"
	default BUSYBOX_DEFAULT_FAKEIDENTD
	select BUSYBOX_CONFIG_FEATURE_SYSLOG
	help
	  fakeidentd listens on the ident port and returns a predefined
	  fake value on any query.
config BUSYBOX_CONFIG_NAMEIF
	bool "nameif"
	default BUSYBOX_DEFAULT_NAMEIF
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	select BUSYBOX_CONFIG_FEATURE_SYSLOG
	help
	  nameif is used to rename network interface by its MAC address.
	  Renamed interfaces MUST be in the down state.
	  It is possible to use a file (default: /etc/mactab)
	  with list of new interface names and MACs.
	  Maximum interface name length: IFNAMSIZ = 16
	  File fields are separated by space or tab.
	  File format:
	  # Comment
	  new_interface_name    XX:XX:XX:XX:XX:XX

config BUSYBOX_CONFIG_FEATURE_NAMEIF_EXTENDED
	bool "Extended nameif"
	default BUSYBOX_DEFAULT_FEATURE_NAMEIF_EXTENDED
	depends on BUSYBOX_CONFIG_NAMEIF
	help
	  This extends the nameif syntax to support the bus_info, driver,
	  phyaddr selectors. The syntax is compatible to the normal nameif.
	  File format:
	    new_interface_name  driver=asix bus=usb-0000:00:08.2-3
	    new_interface_name  bus=usb-0000:00:08.2-3 00:80:C8:38:91:B5
	    new_interface_name  phy_address=2 00:80:C8:38:91:B5
	    new_interface_name  mac=00:80:C8:38:91:B5
	    new_interface_name  00:80:C8:38:91:B5
config BUSYBOX_CONFIG_NBDCLIENT
	bool "nbd-client"
	default BUSYBOX_DEFAULT_NBDCLIENT
	help
	  Network block device client
config BUSYBOX_CONFIG_NC
	bool "nc"
	default BUSYBOX_DEFAULT_NC
	help
	  A simple Unix utility which reads and writes data across network
	  connections.

config BUSYBOX_CONFIG_NC_SERVER
	bool "Netcat server options (-l)"
	default BUSYBOX_DEFAULT_NC_SERVER
	depends on BUSYBOX_CONFIG_NC
	help
	  Allow netcat to act as a server.

config BUSYBOX_CONFIG_NC_EXTRA
	bool "Netcat extensions (-eiw and -f FILE)"
	default BUSYBOX_DEFAULT_NC_EXTRA
	depends on BUSYBOX_CONFIG_NC
	help
	  Add -e (support for executing the rest of the command line after
	  making or receiving a successful connection), -i (delay interval for
	  lines sent), -w (timeout for initial connection).

config BUSYBOX_CONFIG_NC_110_COMPAT
	bool "Netcat 1.10 compatibility (+2.5k)"
	default BUSYBOX_DEFAULT_NC_110_COMPAT  # off specially for Rob
	depends on BUSYBOX_CONFIG_NC
	help
	  This option makes nc closely follow original nc-1.10.
	  The code is about 2.5k bigger. It enables
	  -s ADDR, -n, -u, -v, -o FILE, -z options, but loses
	  busybox-specific extensions: -f FILE.
config BUSYBOX_CONFIG_NETMSG
	bool "netmsg"
	default BUSYBOX_DEFAULT_NETMSG
	help
	  simple program for sending udp broadcast messages
config BUSYBOX_CONFIG_NETSTAT
	bool "netstat"
	default BUSYBOX_DEFAULT_NETSTAT
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  netstat prints information about the Linux networking subsystem.

config BUSYBOX_CONFIG_FEATURE_NETSTAT_WIDE
	bool "Enable wide netstat output"
	default BUSYBOX_DEFAULT_FEATURE_NETSTAT_WIDE
	depends on BUSYBOX_CONFIG_NETSTAT
	help
	  Add support for wide columns. Useful when displaying IPv6 addresses
	  (-W option).

config BUSYBOX_CONFIG_FEATURE_NETSTAT_PRG
	bool "Enable PID/Program name output"
	default BUSYBOX_DEFAULT_FEATURE_NETSTAT_PRG
	depends on BUSYBOX_CONFIG_NETSTAT
	help
	  Add support for -p flag to print out PID and program name.
	  +700 bytes of code.
config BUSYBOX_CONFIG_NSLOOKUP
	bool "nslookup"
	default BUSYBOX_DEFAULT_NSLOOKUP
	help
	  nslookup is a tool to query Internet name servers.
config BUSYBOX_CONFIG_NTPD
	bool "ntpd"
	default BUSYBOX_DEFAULT_NTPD
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  The NTP client/server daemon.

config BUSYBOX_CONFIG_FEATURE_NTPD_SERVER
	bool "Make ntpd usable as a NTP server"
	default BUSYBOX_DEFAULT_FEATURE_NTPD_SERVER
	depends on BUSYBOX_CONFIG_NTPD
	help
	  Make ntpd usable as a NTP server. If you disable this option
	  ntpd will be usable only as a NTP client.

config BUSYBOX_CONFIG_FEATURE_NTPD_CONF
	bool "Make ntpd understand /etc/ntp.conf"
	default BUSYBOX_DEFAULT_FEATURE_NTPD_CONF
	depends on BUSYBOX_CONFIG_NTPD
	help
	  Make ntpd look in /etc/ntp.conf for peers. Only "server address"
	  is supported.
config BUSYBOX_CONFIG_PING
	bool "ping"
	default BUSYBOX_DEFAULT_PING
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  ping uses the ICMP protocol's mandatory ECHO_REQUEST datagram to
	  elicit an ICMP ECHO_RESPONSE from a host or gateway.

config BUSYBOX_CONFIG_PING6
	bool "ping6"
	default BUSYBOX_DEFAULT_PING6
	depends on BUSYBOX_CONFIG_FEATURE_IPV6
	help
	  This will give you a ping that can talk IPv6.

config BUSYBOX_CONFIG_FEATURE_FANCY_PING
	bool "Enable fancy ping output"
	default BUSYBOX_DEFAULT_FEATURE_FANCY_PING
	depends on BUSYBOX_CONFIG_PING || BUSYBOX_CONFIG_PING6
	help
	  Make the output from the ping applet include statistics, and at the
	  same time provide full support for ICMP packets.
config BUSYBOX_CONFIG_PSCAN
	bool "pscan"
	default BUSYBOX_DEFAULT_PSCAN
	help
	  Simple network port scanner.
config BUSYBOX_CONFIG_ROUTE
	bool "route"
	default BUSYBOX_DEFAULT_ROUTE
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Route displays or manipulates the kernel's IP routing tables.
config BUSYBOX_CONFIG_SLATTACH
	bool "slattach"
	default BUSYBOX_DEFAULT_SLATTACH
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  slattach is a small utility to attach network interfaces to serial
	  lines.
config BUSYBOX_CONFIG_TCPSVD
	bool "tcpsvd"
	default BUSYBOX_DEFAULT_TCPSVD
	help
	  tcpsvd listens on a TCP port and runs a program for each new
	  connection.

config BUSYBOX_CONFIG_UDPSVD
	bool "udpsvd"
	default BUSYBOX_DEFAULT_UDPSVD
	help
	  udpsvd listens on an UDP port and runs a program for each new
	  connection.
config BUSYBOX_CONFIG_TELNET
	bool "telnet"
	default BUSYBOX_DEFAULT_TELNET
	help
	  Telnet is an interface to the TELNET protocol, but is also commonly
	  used to test other simple protocols.

config BUSYBOX_CONFIG_FEATURE_TELNET_TTYPE
	bool "Pass TERM type to remote host"
	default BUSYBOX_DEFAULT_FEATURE_TELNET_TTYPE
	depends on BUSYBOX_CONFIG_TELNET
	help
	  Setting this option will forward the TERM environment variable to the
	  remote host you are connecting to. This is useful to make sure that
	  things like ANSI colors and other control sequences behave.

config BUSYBOX_CONFIG_FEATURE_TELNET_AUTOLOGIN
	bool "Pass USER type to remote host"
	default BUSYBOX_DEFAULT_FEATURE_TELNET_AUTOLOGIN
	depends on BUSYBOX_CONFIG_TELNET
	help
	  Setting this option will forward the USER environment variable to the
	  remote host you are connecting to. This is useful when you need to
	  log into a machine without telling the username (autologin). This
	  option enables `-a' and `-l USER' arguments.
config BUSYBOX_CONFIG_TELNETD
	bool "telnetd"
	default BUSYBOX_DEFAULT_TELNETD
	select BUSYBOX_CONFIG_FEATURE_SYSLOG
	help
	  A daemon for the TELNET protocol, allowing you to log onto the host
	  running the daemon. Please keep in mind that the TELNET protocol
	  sends passwords in plain text. If you can't afford the space for an
	  SSH daemon and you trust your network, you may say 'y' here. As a
	  more secure alternative, you should seriously consider installing the
	  very small Dropbear SSH daemon instead:
		http://matt.ucc.asn.au/dropbear/dropbear.html

	  Note that for busybox telnetd to work you need several things:
	  First of all, your kernel needs:
		  CONFIG_UNIX98_PTYS=y

	  Next, you need a /dev/pts directory on your root filesystem:

		  $ ls -ld /dev/pts
		  drwxr-xr-x  2 root root 0 Sep 23 13:21 /dev/pts/

	  Next you need the pseudo terminal master multiplexer /dev/ptmx:

		  $ ls -la /dev/ptmx
		  crw-rw-rw-  1 root tty 5, 2 Sep 23 13:55 /dev/ptmx

	  Any /dev/ttyp[0-9]* files you may have can be removed.
	  Next, you need to mount the devpts filesystem on /dev/pts using:

		  mount -t devpts devpts /dev/pts

	  You need to be sure that busybox has LOGIN and
	  FEATURE_SUID enabled. And finally, you should make
	  certain that Busybox has been installed setuid root:

		chown root.root /bin/busybox
		chmod 4755 /bin/busybox

	  with all that done, telnetd _should_ work....

config BUSYBOX_CONFIG_FEATURE_TELNETD_STANDALONE
	bool "Support standalone telnetd (not inetd only)"
	default BUSYBOX_DEFAULT_FEATURE_TELNETD_STANDALONE
	depends on BUSYBOX_CONFIG_TELNETD
	help
	  Selecting this will make telnetd able to run standalone.

config BUSYBOX_CONFIG_FEATURE_TELNETD_INETD_WAIT
	bool "Support -w SEC option (inetd wait mode)"
	default BUSYBOX_DEFAULT_FEATURE_TELNETD_INETD_WAIT
	depends on BUSYBOX_CONFIG_FEATURE_TELNETD_STANDALONE
	help
	  This option allows you to run telnetd in "inet wait" mode.
	  Example inetd.conf line (note "wait", not usual "nowait"):

	  telnet stream tcp wait root /bin/telnetd telnetd -w10

	  In this example, inetd passes _listening_ socket_ as fd 0
	  to telnetd when connection appears.
	  telnetd will wait for connections until all existing
	  connections are closed, and no new connections
	  appear during 10 seconds. Then it exits, and inetd continues
	  to listen for new connections.

	  This option is rarely used. "tcp nowait" is much more usual
	  way of running tcp services, including telnetd.
	  You most probably want to say N here.
config BUSYBOX_CONFIG_TFTP
	bool "tftp"
	default BUSYBOX_DEFAULT_TFTP
	help
	  This enables the Trivial File Transfer Protocol client program. TFTP
	  is usually used for simple, small transfers such as a root image
	  for a network-enabled bootloader.

config BUSYBOX_CONFIG_TFTPD
	bool "tftpd"
	default BUSYBOX_DEFAULT_TFTPD
	help
	  This enables the Trivial File Transfer Protocol server program.
	  It expects that stdin is a datagram socket and a packet
	  is already pending on it. It will exit after one transfer.
	  In other words: it should be run from inetd in nowait mode,
	  or from udpsvd. Example: "udpsvd -E 0 69 tftpd DIR"

comment "Common options for tftp/tftpd"
	depends on BUSYBOX_CONFIG_TFTP || BUSYBOX_CONFIG_TFTPD

config BUSYBOX_CONFIG_FEATURE_TFTP_GET
	bool "Enable 'tftp get' and/or tftpd upload code"
	default BUSYBOX_DEFAULT_FEATURE_TFTP_GET
	depends on BUSYBOX_CONFIG_TFTP || BUSYBOX_CONFIG_TFTPD
	help
	  Add support for the GET command within the TFTP client. This allows
	  a client to retrieve a file from a TFTP server.
	  Also enable upload support in tftpd, if tftpd is selected.

	  Note: this option does _not_ make tftpd capable of download
	  (the usual operation people need from it)!

config BUSYBOX_CONFIG_FEATURE_TFTP_PUT
	bool "Enable 'tftp put' and/or tftpd download code"
	default BUSYBOX_DEFAULT_FEATURE_TFTP_PUT
	depends on BUSYBOX_CONFIG_TFTP || BUSYBOX_CONFIG_TFTPD
	help
	  Add support for the PUT command within the TFTP client. This allows
	  a client to transfer a file to a TFTP server.
	  Also enable download support in tftpd, if tftpd is selected.

config BUSYBOX_CONFIG_FEATURE_TFTP_BLOCKSIZE
	bool "Enable 'blksize' and 'tsize' protocol options"
	default BUSYBOX_DEFAULT_FEATURE_TFTP_BLOCKSIZE
	depends on BUSYBOX_CONFIG_TFTP || BUSYBOX_CONFIG_TFTPD
	help
	  Allow tftp to specify block size, and tftpd to understand
	  "blksize" and "tsize" options.

config BUSYBOX_CONFIG_FEATURE_TFTP_PROGRESS_BAR
	bool "Enable tftp progress meter"
	default BUSYBOX_DEFAULT_FEATURE_TFTP_PROGRESS_BAR
	depends on BUSYBOX_CONFIG_TFTP && BUSYBOX_CONFIG_FEATURE_TFTP_BLOCKSIZE
	help
	  Show progress bar.

config BUSYBOX_CONFIG_TFTP_DEBUG
	bool "Enable debug"
	default BUSYBOX_DEFAULT_TFTP_DEBUG
	depends on BUSYBOX_CONFIG_TFTP || BUSYBOX_CONFIG_TFTPD
	help
	  Make tftp[d] print debugging messages on stderr.
	  This is useful if you are diagnosing a bug in tftp[d].
config BUSYBOX_CONFIG_TRACEROUTE
	bool "traceroute"
	default BUSYBOX_DEFAULT_TRACEROUTE
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Utility to trace the route of IP packets.

config BUSYBOX_CONFIG_TRACEROUTE6
	bool "traceroute6"
	default BUSYBOX_DEFAULT_TRACEROUTE6
	depends on BUSYBOX_CONFIG_FEATURE_IPV6
	help
	  Utility to trace the route of IPv6 packets.

config BUSYBOX_CONFIG_FEATURE_TRACEROUTE_VERBOSE
	bool "Enable verbose output"
	default BUSYBOX_DEFAULT_FEATURE_TRACEROUTE_VERBOSE
	depends on BUSYBOX_CONFIG_TRACEROUTE || BUSYBOX_CONFIG_TRACEROUTE6
	help
	  Add some verbosity to traceroute. This includes among other things
	  hostnames and ICMP response types.

config BUSYBOX_CONFIG_FEATURE_TRACEROUTE_USE_ICMP
	bool "Enable -I option (use ICMP instead of UDP)"
	default BUSYBOX_DEFAULT_FEATURE_TRACEROUTE_USE_ICMP
	depends on BUSYBOX_CONFIG_TRACEROUTE || BUSYBOX_CONFIG_TRACEROUTE6
	help
	  Add option -I to use ICMP ECHO instead of UDP datagrams.
config BUSYBOX_CONFIG_TUNCTL
	bool "tunctl"
	default BUSYBOX_DEFAULT_TUNCTL
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  tunctl creates or deletes tun devices.

config BUSYBOX_CONFIG_FEATURE_TUNCTL_UG
	bool "Support owner:group assignment"
	default BUSYBOX_DEFAULT_FEATURE_TUNCTL_UG
	depends on BUSYBOX_CONFIG_TUNCTL
	help
	  Allow to specify owner and group of newly created interface.
	  340 bytes of pure bloat. Say no here.
config BUSYBOX_CONFIG_VCONFIG
	bool "vconfig"
	default BUSYBOX_DEFAULT_VCONFIG
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	help
	  Creates, removes, and configures VLAN interfaces
config BUSYBOX_CONFIG_WGET
	bool "wget"
	default BUSYBOX_DEFAULT_WGET
	help
	  wget is a utility for non-interactive download of files from HTTP
	  and FTP servers.

config BUSYBOX_CONFIG_FEATURE_WGET_STATUSBAR
	bool "Enable a nifty process meter (+2k)"
	default BUSYBOX_DEFAULT_FEATURE_WGET_STATUSBAR
	depends on BUSYBOX_CONFIG_WGET
	help
	  Enable the transfer progress bar for wget transfers.

config BUSYBOX_CONFIG_FEATURE_WGET_AUTHENTICATION
	bool "Enable HTTP authentication"
	default BUSYBOX_DEFAULT_FEATURE_WGET_AUTHENTICATION
	depends on BUSYBOX_CONFIG_WGET
	help
	  Support authenticated HTTP transfers.

config BUSYBOX_CONFIG_FEATURE_WGET_LONG_OPTIONS
	bool "Enable long options"
	default BUSYBOX_DEFAULT_FEATURE_WGET_LONG_OPTIONS
	depends on BUSYBOX_CONFIG_WGET && BUSYBOX_CONFIG_LONG_OPTS
	help
	  Support long options for the wget applet.

config BUSYBOX_CONFIG_FEATURE_WGET_TIMEOUT
	bool "Enable timeout option -T SEC"
	default BUSYBOX_DEFAULT_FEATURE_WGET_TIMEOUT
	depends on BUSYBOX_CONFIG_WGET
	help
	  Supports network read and connect timeouts for wget,
	  so that wget will give up and timeout, through the -T
	  command line option.

	  Currently only connect and network data read timeout are
	  supported (i.e., timeout is not applied to the DNS query). When
	  FEATURE_WGET_LONG_OPTIONS is also enabled, the --timeout option
	  will work in addition to -T.

config BUSYBOX_CONFIG_FEATURE_WGET_OPENSSL
	bool "Try to connect to HTTPS using openssl"
	default BUSYBOX_DEFAULT_FEATURE_WGET_OPENSSL
	depends on BUSYBOX_CONFIG_WGET
	help
	  Choose how wget establishes SSL connection for https:// URLs.

	  Busybox itself contains no SSL code. wget will spawn
	  a helper program to talk over HTTPS.

	  OpenSSL has a simple SSL client for debug purposes.
	  If you select "openssl" helper, wget will effectively run:
	  "openssl s_client -quiet -connect hostname:443
	  -servername hostname 2>/dev/null" and pipe its data
	  through it. -servername is not used if hostname is numeric.
	  Note inconvenient API: host resolution is done twice,
	  and there is no guarantee openssl's idea of IPv6 address
	  format is the same as ours.
	  Another problem is that s_client prints debug information
	  to stderr, and it needs to be suppressed. This means
	  all error messages get suppressed too.
	  openssl is also a big binary, often dynamically linked
	  against ~15 libraries.

config BUSYBOX_CONFIG_FEATURE_WGET_SSL_HELPER
	bool "Try to connect to HTTPS using ssl_helper"
	default BUSYBOX_DEFAULT_FEATURE_WGET_SSL_HELPER
	depends on BUSYBOX_CONFIG_WGET
	help
	  Choose how wget establishes SSL connection for https:// URLs.

	  Busybox itself contains no SSL code. wget will spawn
	  a helper program to talk over HTTPS.

	  ssl_helper is a tool which can be built statically
	  from busybox sources against a small embedded SSL library.
	  Please see networking/ssl_helper/README.
	  It does not require double host resolution and emits
	  error messages to stderr.

	  Precompiled static binary may be available at
	  http://busybox.net/downloads/binaries/
config BUSYBOX_CONFIG_WHOIS
	bool "whois"
	default BUSYBOX_DEFAULT_WHOIS
	help
	  whois is a client for the whois directory service
config BUSYBOX_CONFIG_ZCIP
	bool "zcip"
	default BUSYBOX_DEFAULT_ZCIP
	select BUSYBOX_CONFIG_PLATFORM_LINUX
	select BUSYBOX_CONFIG_FEATURE_SYSLOG
	help
	  ZCIP provides ZeroConf IPv4 address selection, according to RFC 3927.
	  It's a daemon that allocates and defends a dynamically assigned
	  address on the 169.254/16 network, requiring no system administrator.

	  See http://www.zeroconf.org for further details, and "zcip.script"
	  in the busybox examples.

source udhcp/Config.in

config BUSYBOX_CONFIG_IFUPDOWN_UDHCPC_CMD_OPTIONS
	string "ifup udhcpc command line options"
	default BUSYBOX_DEFAULT_IFUPDOWN_UDHCPC_CMD_OPTIONS
	depends on BUSYBOX_CONFIG_IFUPDOWN && BUSYBOX_CONFIG_UDHCPC
	help
	  Command line options to pass to udhcpc from ifup.
	  Intended to alter options not available in /etc/network/interfaces.
	  (IE: --syslog --background etc...)

endmenu
