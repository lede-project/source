--- a/src/include/drv_dsl_cpe_os_linux.h
+++ b/src/include/drv_dsl_cpe_os_linux.h
@@ -214,12 +214,25 @@ static inline int dsl_mutex_lock(struct 
 #define DSL_DRV_MUTEX_LOCK(id)               down_interruptible(&(id))
 #define DSL_DRV_MUTEX_UNLOCK(id)             up(&(id))
 #endif
+
+static inline long
+ugly_hack_sleep_on_timeout(wait_queue_head_t *q, long timeout)
+{
+	DEFINE_WAIT(wait);
+
+	prepare_to_wait(q, &wait, TASK_INTERRUPTIBLE);
+	timeout = schedule_timeout(timeout);
+	finish_wait(q, &wait);
+
+	return timeout;
+}
+
 #define DSL_DRV_INIT_WAKELIST(name,queue)    init_waitqueue_head(&(queue))
 #define DSL_DRV_WAKEUP_WAKELIST(queue)       wake_up_interruptible(&(queue))
 #define DSL_DRV_INIT_EVENT(name,ev)          init_waitqueue_head(&(ev))
 /* wait for an event, timeout is measured in ms */
-#define DSL_DRV_WAIT_EVENT_TIMEOUT(ev,t)     interruptible_sleep_on_timeout(&(ev), (t) * HZ / 1000)
-#define DSL_DRV_WAIT_EVENT(ev)               interruptible_sleep_on(&(ev))
+#define DSL_DRV_WAIT_EVENT_TIMEOUT(ev,t)     ugly_hack_sleep_on_timeout(&(ev), (t) * HZ / 1000)
+#define DSL_DRV_WAIT_EVENT(ev)               ugly_hack_sleep_on_timeout(&(ev), MAX_SCHEDULE_TIMEOUT)
 #define DSL_DRV_WAKEUP_EVENT(ev)             wake_up_interruptible(&(ev))
 #define DSL_DRV_TimeMSecGet()                DSL_DRV_ElapsedTimeMSecGet(0)
 #define DSL_WAIT(ms)   msleep(ms)
